{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/components/navbar/navbar.component.html","/./src/app/components/new-problem/new-problem.component.html","/./src/app/components/problem-detail/problem-detail.component.html","/./src/app/components/problem-list/problem-list.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/app.routes.ts","/./src/app/components/navbar/navbar.component.css","/./src/app/components/navbar/navbar.component.ts","/./src/app/components/new-problem/new-problem.component.css","/./src/app/components/new-problem/new-problem.component.ts","/./src/app/components/problem-detail/problem-detail.component.css","/./src/app/components/problem-detail/problem-detail.component.ts","/./src/app/components/problem-list/problem-list.component.css","/./src/app/components/problem-list/problem-list.component.ts","/./src/app/services/data.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Problem\\\" aria-label=\\\"Search\\\">\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n\\n        <button class=\\\"btn btn-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Sign In</button>\\n\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          {{username}}\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Profile</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Favorites</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Log out</a>\\n        </div>\\n      </li>\\n      </ul>\\n      </form>\\n    </div>\\n  </nav>\\n</div>\\n\\n\"","module.exports = \"<!--<div>-->\\n  <!--<form #formRef=\\\"ngForm\\\" data-toggle=\\\"validator\\\">-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"problemName\\\">Problem Name</label>-->\\n      <!--<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"-->\\n             <!--name=\\\"problemName\\\" placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\"/>-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"problemDesc\\\">Problem Description</label>-->\\n      <!--<textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"-->\\n             <!--name=\\\"problemDesc\\\" placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\" required>-->\\n      <!--</textarea>-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"difficulty\\\">Difficulty</label>-->\\n      <!--<select class=\\\"form-control\\\" id=\\\"difficulty\\\"-->\\n                <!--name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\" required>-->\\n        <!--<option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">-->\\n          <!--{{difficulty}}-->\\n        <!--</option>-->\\n      <!--</select>-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"row\\\">-->\\n      <!--<div class=\\\"col-md-12\\\">-->\\n        <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>-->\\n      <!--</div>-->\\n    <!--</div>-->\\n\\n  <!--</form>-->\\n<!--</div>-->\\n<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n             name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n                name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n              name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class=\\\"col-xs-12 col-md-4\\\">\\n\\t\\t<div>\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\t{{problem.id}}.{{problem.name}}\\n\\t\\t\\t</h2>\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t{{problem.desc}}\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n\\t</div>\\t\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { routing } from './app.routes';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { DataService } from \"./services/data.service\";\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\n\nimport { FormsModule }   from '@angular/forms';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    routing,\n    FormsModule\n\n  ],\n  providers: [{\n  provide: \"data\",\n  useClass: DataService\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from \"@angular/router\"\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\n\nconst routes: Routes=[\n{\n\tpath: \"\",\n\tredirectTo: \"problems\",\n\tpathMatch: \"full\"\n},\n{\n\tpath: \"problems\",\n\tcomponent: ProblemListComponent\n\n},\n{\n\tpath: \"problems/:id\",\n\tcomponent: ProblemDetailComponent\n},\n{\n\tpath:\"**\",\n\tredirectTo: \"problems\",\n}\n];\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  title = 'COJ';\n\n  username = 'John';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmV3LXByb2JsZW0vbmV3LXByb2JsZW0uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Problem} from '../../models/problem.model';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc:  '',\n  difficulty: 'Easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = ['Easy', 'Medium', 'Hard' , 'Super'];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n  constructor(@Inject('data') private data) { }\n\n\n  ngOnInit() {\n  }\n\n  addProblem(): void {\n this.data.addProblem(this.newProblem)\n   .catch(error => console.log(error._body));\n this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvYmxlbS1kZXRhaWwvcHJvYmxlbS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n\tproblem: Problem;\n\n  constructor(\n    private route: ActivatedRoute,\n  @Inject('data') private data) { }\n\n  ngOnInit() {\n  \tthis.route.params.subscribe(params => {\n  \t\tthis.data.getProblem(+params[\"id\"])\n        .then(problem => this.problem = problem);\n  \t});\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGlmZmljdWx0eSB7XG4gIG1pbi13aWR0aDogNjVweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4ubGFiZWwuZGlmZmljdWx0eSB7XG4gIHBhZGRpbmctdG9wOiAwLjZlbTtcbiAgY29sb3I6ICNmYmZkZmE7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjJlbTtcbn1cblxuLmRpZmYtZWFzeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0MmViZjQ7XG59XG5cbi5kaWZmLW1lZGl1bSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5MmNmNWM7XG59XG5cbi5kaWZmLWhhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGQwZDFlO1xufVxuXG4uZGlmZi1zdXBlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4ZDE2ZTI7XG59XG4iXX0= */\"","import { Component, OnInit, Inject} from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n\n  problems: Problem[] = [];\n  subscriptionProblems: Subscription;\n\n  constructor(@Inject('data') private data) { }\n\n  ngOnInit() {\n  this.getProblems();\n  }\n\n  getProblems(): void {\n  this.subscriptionProblems = this.data.getProblems()\n                                      .subscribe(problems => this.problems = problems);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Problem} from '../models/problem.model';\nimport {PROBLEMS} from '../mock.problems';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\n\nexport class DataService {\n\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: Http) {\n  }\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get('api/v1/problems')\n      .toPromise()\n      .then((res: Response) => {\n        this.problemsSource.next(res.json());\n      })\n      .catch(this.handleError);\n\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get('api/v1/problems/${id}')\n      .toPromise()\n      .then((res: Response) => res.json())\n      .catch(this.handleError);\n  }\n\n\n  addProblem(problem: Problem): Promise<Problem> {\n    // let headers = new HttpHeaders({'content-type': 'application/json'});\n    // let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    let headers = new Headers({'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' });\n    let options = new RequestOptions({headers: headers});\n    return this.http.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: Response) => {\n        this.getProblems();\n        return res.json();\n      })\n      .catch(this.handleError);\n\n  }\n\n// error handler\n\n  handleError(error: any): Promise<any> {\n\n    console.error('An error occured', error);\n\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}